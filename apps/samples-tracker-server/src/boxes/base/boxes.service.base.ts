/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Boxes as PrismaBoxes } from "@prisma/client";

export class BoxesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BoxesCountArgs, "select">): Promise<number> {
    return this.prisma.boxes.count(args);
  }

  async boxesItems(args: Prisma.BoxesFindManyArgs): Promise<PrismaBoxes[]> {
    return this.prisma.boxes.findMany(args);
  }
  async boxes(args: Prisma.BoxesFindUniqueArgs): Promise<PrismaBoxes | null> {
    return this.prisma.boxes.findUnique(args);
  }
  async createBoxes(args: Prisma.BoxesCreateArgs): Promise<PrismaBoxes> {
    return this.prisma.boxes.create(args);
  }
  async updateBoxes(args: Prisma.BoxesUpdateArgs): Promise<PrismaBoxes> {
    return this.prisma.boxes.update(args);
  }
  async deleteBoxes(args: Prisma.BoxesDeleteArgs): Promise<PrismaBoxes> {
    return this.prisma.boxes.delete(args);
  }
}
